TOOLCHAIN = /opt/gcw0-toolchain-static
CXX = $(TOOLCHAIN)/usr/bin/mipsel-linux-g++
CC = $(TOOLCHAIN)/usr/bin/mipsel-linux-gcc

#OPENGL_RENDERER

CFLAGS	= -Ofast -fdata-sections -ffunction-sections -mframe-header-opt -mno-fp-exceptions -mno-check-zero-division -fsingle-precision-constant
CFLAGS += -fno-common -march=mips32r2 -mtune=mips32r2 -mno-abicalls -fno-PIC -flto -mno-abicalls
CFLAGS += -I/opt/gcw0-toolchain-static/usr/mipsel-buildroot-linux-musl/sysroot/usr/include/SDL
CFLAGS += -I. -Ilib/enet/include -Isrc -Ilib/irrlicht/include -Ilib/bullet/src 
CFLAGS += -I/opt/gcw0-toolchain-static/usr/mipsel-buildroot-linux-musl/sysroot/usr/include/freetype2/freetype
CFLAGS += -I/opt/gcw0-toolchain-static/usr/mipsel-buildroot-linux-musl/sysroot/usr/include/freetype2 -I/opt/gcw0-toolchain-static/usr/mipsel-buildroot-linux-musl/sysroot/usr/include/AL
CFLAGS += -DHAVE_OGGVORBIS -DNDEBUG -DGKD350H

ifeq ($(PROFILE), YES)
CFLAGS 		+= -fprofile-generate=/media/roms/stk_gcda
else ifeq ($(PROFILE), APPLY)
CFLAGS		+= -fprofile-use -fbranch-probabilities
endif

CXXFLAGS = $(CFLAGS) -std=gnu++03 -ftree-vectorize

#-lGL -lEGL -lpreload 

LDFLAGS = -Wl,--start-group -lc -lgcc -lstdc++ -lSDL -logg -lvorbis -lvorbisfile -lasound -lpng -ljpeg -lz -lopenal -lcurl -lm -pthread -flto -Wl,--as-needed -Wl,--gc-sections -s -Wl,--end-group
ifeq ($(PROFILE), YES)
LDFLAGS += -lgcov
endif

EXE = opk/stk.elf
OBJS = $(patsubst %.c, %.o, $(shell find . -name \*.c))
OBJS += $(patsubst %.cpp, %.o, $(shell find . -name \*.cpp))
OBJS += $(patsubst %.S, %.o, $(shell find . -name \*.S))

all: $(EXE)

%.o: %.cpp
	@echo Compiling $<...
	$(CXX) $(CXXFLAGS) -c $< -o $@

$(EXE): $(OBJS)
	$(CXX) $(CXXFLAGS)  $^ -o $@ $(LDFLAGS)

.PHONY: clean
clean:
	rm -f `find . -name \*.o`
	rm -f $(EXE)
